import React, { useState, useEffect, useRef } from 'react';
import { useRouter } from 'next/router';
import Head from 'next/head';
import styles from '../styles/Landing.module.css'
import { useInView } from 'react-intersection-observer';


export function Landing() {
    const textRef = useRef(null);
    const outputRef = useRef(null);

    const [scrollProgress1, setScrollProgress1] = useState(0);
    const firstTwoSections = useRef(null);
    const [refView1, inView1] = useInView({
        threshold: 1.,
        rootMargin: '100px',
    });
    const [refView2, inView2] = useInView({
        threshold: 0.5,
    });



    const [showCopied, setShowCopied] = useState(false);



    useEffect(() => {

    }, []);

    const [showDone, setShowDone] = useState(false);


    const handleFormSubmit = (e) => {
        // prevent default 
        e.preventDefault();

        fetch('api/save_email', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                email: e.target.email.value,
            }),
        });

        setShowDone(true);
        setTimeout(() => {
            setShowDone(false);
        }, 1000);
    }


    const copyClickHandle = () => {
        navigator.clipboard.writeText(outputRef.current.value);
        setShowCopied(true);
        setTimeout(() => {
            setShowCopied(false);
        }, 1000);
    }

    function handleScroll1(e) {
        const scrollTop = e.target.scrollTop;
        const clientHeight = e.target.clientHeight;

        const divTop = firstTwoSections.current.offsetTop;
        const divMiddle = firstTwoSections.current.offsetTop + firstTwoSections.current.offsetHeight / 2;

        const offsetStart = divMiddle - (clientHeight - 80) - 50;

        const percentScrolled = Math.min(((scrollTop - offsetStart) / (divTop - 100) * 2) * 100, 100);

        setScrollProgress1(percentScrolled);
        console.log(percentScrolled, (scrollTop - offsetStart), divTop);
    }

    return (
        <>
            <Head>
                <title>Bypass GPTZero - GPTinf</title>
                <meta name="description" content="A paraphrasing tool to avoid chatGPT detector, like GPTZero. GPTinf rephrases AI-content into an undetectable version for AI plagiarism detectors." />
                <meta name="keywords" content="bypass gptzero, bypass gpt zero, gpt zero bypass, avoid gptzero, avoid gpt zero, gpt zero, gpt inf, gptinf, gptzero, paraphrasing tool, rephrase chatgpt, rewrite chatgpt, rewrite chat gpt, rephrase chat gpt" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />

                <meta property="og:title" content="Avoid GPTZero detection - GPTinf" />
                <meta property="og:type" content="website" />
                <meta property="og:description" content="A paraphrasing tool to avoid chatGPT detector, like GPTZero, in one click" />
                <meta property="og:locale" content="en_US" />
                {/* <meta property="og:image" content="https://ahrefs.com/blog/wp-content/uploads/2020/01/fb-open-graph-1.jpg" /> */}
                <meta property="og:url" content="https://www.gptinf.com" />
            </Head>
            <main className={styles.main} onScroll={handleScroll1} style={{ scrollBehavior: 'smooth' }}>
                <div className={styles.header}>
                    <>
                        <a href="https://patreon.com/GPTinf">Patreon</a>
                    </>
                </div>
                <div className={styles.section0}>
                    <h1>Bypass GPTZero detection</h1>
                    <h2>A rephrasing tool that does it for you</h2>
                    <a href="#early">Get started</a>
                </div>
                <div ref={firstTwoSections}>
                    <div className={styles.section1} id='section1'>
                        {/* <h1>Avoid AI detection</h1>
                     */}
                        <h2>Rephrase AI text with one click</h2>
                        <div className={styles.inputContainer}>

                            {/* <GrammarlyEditorPlugin clientId="client_NWi8ToFFpVL9ZFJY6vdmLm"> */}
                            <textarea ref={textRef} className={styles.input} placeholder="Insert text here" readOnly value={`This paragraph was generated by ChatGPT, a language model trained by OpenAI. ChatGPT is designed to generate human-like responses to a wide range of prompts and questions. Its training data includes vast amounts of text from the internet, as well as books and other sources. Using sophisticated algorithms and natural language processing techniques, ChatGPT is able to understand and respond to a wide range of inputs, from simple questions to complex prompts. The goal of ChatGPT is to provide a useful and engaging conversational experience for users, and to help people find information and solve problems in a more natural and intuitive way.`}>
                            </textarea>
                            {/* </GrammarlyEditorPlugin> */}
                            <div className={styles.textCount}>
                                103
                            </div>
                        </div>
                        <div ref={refView1}>
                            <button className={styles.button}>{inView1 ? '...' : 'Get results'}</button>
                        </div>
                    </div>
                    <div className={styles.loadingBarContainer} ref={refView1}>
                        <div className={styles.loadingBar}>
                            <div className={styles.loadingBarInner}
                                style={{ width: `${scrollProgress1}%` }}></div>
                        </div>
                    </div>
                    <div className={styles.section2} ref={refView2}>
                        <div className={styles.outputContainer} style={{ opacity: scrollProgress1 > 90 ? 1 : 0 }}>
                            <div className={styles.copyToClipboard}>
                                <button className={styles.button} onClick={() => { copyClickHandle() }} title="Copy to clipboard">
                                    <span class="material-symbols-outlined">
                                        {showCopied ? 'done' : 'content_copy'}
                                    </span>
                                </button>
                            </div>
                            {/* <textarea className={styles.output} ref={outputRef} value={`This paragraph was created by ChatGPT â€“ a language model produced by OpenAI. ChatGPT is intended to build human-like responses for a broad selection of inquiries and prompts. Its training materials encompass an abundance of language from the world wide web, along with books and other origins. By employing sophisticated algorithms and natural language processing technologies, ChatGPT is able to comprehend and answer a broad range of inputs, from plain queries to complicated prompts. The purpose of ChatGPT is to provide a useful and captivating conversational experience for customers and to assist people to uncover information and address problems in a more organic and straightforward manner.`} readOnly> */}
                            {/* <textarea className={styles.output} ref={outputRef} value={`This paragraph was created by ChatGPT. ChatGPT is a language model created by OpenAI for generating human-like answers to a variety of prompts and queries. This AI draws from considerable text from web sources, together with books and other materials, to construct its training data. Through complex algorithms and natural language processing strategies ChatGPT can comprehend and address a broad selection of inputs, from complex queries to more straightforward ones. The aim of ChatGPT is to give a helpful and engaging conversational experience for users and to help them find information and resolve problems in a more natural and seamless way.`} readOnly> */}

                            <textarea className={styles.output} ref={outputRef} value={`This section was created with the help of ChatGPT, an AI built by OpenAI. Intended to generate chatbot-like replies to an expansive range of queries and topics, the model uses a multitude of written sources from the internet including books, and other resources. Equipped with powerful algorithms and machine language processing, ChatGPT is capable of responding well to different types of prompts - from basic inquiries to complex requests. With the intention of giving customers a fulfilling experience, the objective of ChatGPT is to provide people with an effortless way to get information and solve problems by communicating naturally.`} readOnly>
                            </textarea>
                            <div className={styles.textCount}>
                                99
                            </div>
                        </div>
                    </div>
                </div>
                <div style={{ height: '10vh' }}></div>

                <div className={styles.section3}>
                    <h1>How does it work?</h1>
                    <p>Insert text you want to edit and press "Get results"</p>
                    <p>GPTinf's series of algorithms will do the rest.</p>
                    <p>The output is an undetectable rephrased text. GPTinf rephrases it specifically to hide from AI-content detection tools.</p>

                </div>

                <div className={styles.section3}>
                    <h1>Current limitations</h1>
                    <p>In rare cases GPTinf may need more than 1 trial to generate an undetectable text.</p>
                    <p>GPTinf may, unintentionally, produce grammatical errors, but fixing them with Grammarly is enough.</p>
                    <p>Sometimes, GPTinf may use too rare words, but regenerating the result fixes this issue.</p>
                </div>
                <div className={styles.section3}>
                    <h1>Why GPTinf?</h1>
                    <p>It is a working and continuously improving solution. GPTZero adapts quickly, and GPTinf does it faster.</p>
                    <p>Instead of using fonts-tricks, grammatical errors, or non-English symbols, GPTinf truly rephrases the text.</p>
                    <p>GPTinf is not a regular rephrasing tool, but the one dedicated for bypassing AI-content detection.</p>
                </div>

                <div className={`${styles.section3} ${styles.section3Sized}`} id="early">
                    <h3>Open beta is closed. Subscribe to get notified when we launch</h3>
                    <form onSubmit={handleFormSubmit}>
                        <input type="email" name="email" placeholder="Email address"></input>
                        <button type="submit" name="submit">{showDone ?
                            <span class="material-symbols-outlined">
                                done
                            </span>
                            :
                            'Submit'}</button>
                    </form>

                    <h3>Or, access early (right now), through Patreon</h3>
                    <a href="https://patreon.com/GPTinf" style={{ marginTop: 0 }}>Patreon</a>
                </div>
            </main >
        </>
    );
}